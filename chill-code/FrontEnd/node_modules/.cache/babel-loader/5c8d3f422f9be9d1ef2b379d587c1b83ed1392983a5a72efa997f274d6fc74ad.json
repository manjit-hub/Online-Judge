{"ast":null,"code":"app.post(\"/problems\", async (req, res) => {\n  try {\n    const {\n      title,\n      difficulty,\n      description,\n      acceptanceRate,\n      testCases\n    } = req.body;\n    if (!title || !difficulty || !description || !acceptanceRate || !testCases) {\n      return res.status(400).send(\"Please fill all required fields\");\n    }\n\n    // Get the highest current problem number and increment it for the new problem\n    const highestProblem = await Problem.findOne().sort('-number').exec();\n    const newProblemNumber = highestProblem ? highestProblem.number + 1 : 1;\n    const problem = new Problem({\n      number: newProblemNumber,\n      title,\n      difficulty,\n      description,\n      acceptance_rate: acceptanceRate,\n      testCases\n    });\n    await problem.save();\n    res.status(201).json({\n      message: 'Problem added successfully',\n      problem\n    });\n  } catch (error) {\n    console.error(error);\n    res.status(500).send(\"Internal server error\");\n  }\n});","map":{"version":3,"names":["app","post","req","res","title","difficulty","description","acceptanceRate","testCases","body","status","send","highestProblem","Problem","findOne","sort","exec","newProblemNumber","number","problem","acceptance_rate","save","json","message","error","console"],"sources":["E:/00__AlgoUni/CodeQuest/Online-Judge/code-quest/FrontEnd/src/pages/AddProblemPage.js"],"sourcesContent":["app.post(\"/problems\", async (req, res) => {\r\n  try {\r\n      const { title, difficulty, description, acceptanceRate, testCases } = req.body;\r\n\r\n      if (!title || !difficulty || !description || !acceptanceRate || !testCases) {\r\n          return res.status(400).send(\"Please fill all required fields\");\r\n      }\r\n\r\n      // Get the highest current problem number and increment it for the new problem\r\n      const highestProblem = await Problem.findOne().sort('-number').exec();\r\n      const newProblemNumber = highestProblem ? highestProblem.number + 1 : 1;\r\n\r\n      const problem = new Problem({\r\n          number: newProblemNumber,\r\n          title,\r\n          difficulty,\r\n          description,\r\n          acceptance_rate: acceptanceRate,\r\n          testCases,\r\n      });\r\n\r\n      await problem.save();\r\n      res.status(201).json({ message: 'Problem added successfully', problem });\r\n  } catch (error) {\r\n      console.error(error);\r\n      res.status(500).send(\"Internal server error\");\r\n  }\r\n});\r\n"],"mappings":"AAAAA,GAAG,CAACC,IAAI,CAAC,WAAW,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACxC,IAAI;IACA,MAAM;MAAEC,KAAK;MAAEC,UAAU;MAAEC,WAAW;MAAEC,cAAc;MAAEC;IAAU,CAAC,GAAGN,GAAG,CAACO,IAAI;IAE9E,IAAI,CAACL,KAAK,IAAI,CAACC,UAAU,IAAI,CAACC,WAAW,IAAI,CAACC,cAAc,IAAI,CAACC,SAAS,EAAE;MACxE,OAAOL,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,iCAAiC,CAAC;IAClE;;IAEA;IACA,MAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,SAAS,CAAC,CAACC,IAAI,CAAC,CAAC;IACrE,MAAMC,gBAAgB,GAAGL,cAAc,GAAGA,cAAc,CAACM,MAAM,GAAG,CAAC,GAAG,CAAC;IAEvE,MAAMC,OAAO,GAAG,IAAIN,OAAO,CAAC;MACxBK,MAAM,EAAED,gBAAgB;MACxBb,KAAK;MACLC,UAAU;MACVC,WAAW;MACXc,eAAe,EAAEb,cAAc;MAC/BC;IACJ,CAAC,CAAC;IAEF,MAAMW,OAAO,CAACE,IAAI,CAAC,CAAC;IACpBlB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACY,IAAI,CAAC;MAAEC,OAAO,EAAE,4BAA4B;MAAEJ;IAAQ,CAAC,CAAC;EAC5E,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpBrB,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,uBAAuB,CAAC;EACjD;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}